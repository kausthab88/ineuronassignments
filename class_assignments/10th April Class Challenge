{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "811a7f5d",
   "metadata": {},
   "outputs": [],
   "source": [
    "import module1\n",
    "import logging as log"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "0b7d355b",
   "metadata": {},
   "outputs": [],
   "source": [
    "log.basicConfig(filename ='even_log.log',level = log.INFO, format = '%(asctime)s %(name)s %(levelname)s%(message)s')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "c39da658",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "109\n",
      "this is custom error cant enter number greater than 100\n",
      "code is executed\n"
     ]
    }
   ],
   "source": [
    "try:\n",
    "    n = int(input())\n",
    "    print(module1.print_even(n))\n",
    "except Exception as e:\n",
    "    log.critical('the error has been saved')\n",
    "    print('this is custom error',e)\n",
    "finally:\n",
    "    log.warning('This is finally logged')\n",
    "    print('code is executed')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "43d9dde0",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "try:\n",
    "    print_\n",
    "    \n",
    "except Exception as e:\n",
    "    print(e)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7cc3d91c",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
